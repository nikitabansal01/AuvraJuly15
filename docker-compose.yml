version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      # 환경 설정 (개발/배포 모두 지원)
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      # 서버 설정
      - HOST=0.0.0.0
      - PORT=8000
      
      # 데이터베이스 설정 (환경변수 우선, 없으면 기본값)
      - DATABASE_URL=${DATABASE_URL:-postgresql://auvra_user:auvra_password@db:5432/auvra_db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      
      # Firebase 설정 (환경변수 우선)
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-auvra-adf59}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY:-}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL:-}
      
      # 보안 설정
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      
      # CORS 설정 (환경변수 우선, 없으면 모든 호스트 허용)
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-["*"]}
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - auvra-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-auvra_db}
      - POSTGRES_USER=${POSTGRES_USER:-auvra_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-auvra_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - auvra-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - auvra-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - auvra-network

volumes:
  postgres_data:
  redis_data:

networks:
  auvra-network:
    driver: bridge 